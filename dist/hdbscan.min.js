!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("kd-tree-javascript")):"function"==typeof define&&define.amd?define(["exports","kd-tree-javascript"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).hdbscan={},e.kdTreeJS)}(this,function(e,r){"use strict";class z{constructor(e,t,s,n){this.parent=e,this.child=t,this.lambda=s,this.size=n}}class A{constructor(e){this.data=e}getAncestor(){return this.parent?this.parent.getAncestor():this}}class l{constructor(e){this.parent=new Array(2*(e-1)).fill(-1),this.nextLabel=e,this.size=new Array(e).fill(1).concat(new Array(e-1).fill(0))}union(e,t){this.size[this.nextLabel]=this.size[e]+this.size[t],this.parent[e]=this.nextLabel,this.parent[t]=this.nextLabel,this.size[this.nextLabel]=this.size[e]+this.size[t],this.nextLabel+=1}fastFind(e){for(var t=e;-1!=this.parent[e];)e=this.parent[e];for(;this.parent[t]!=e;)t=this.parent[t],this.parent[t]=e;return e}sizeOf(e){return this.size[e]}}class x{constructor(e){this.data=new Array(e);for(var t=0;t<e;t++)this.data[t]=[t,0];this.isComponent=new Array(e).fill(!0)}union(e,t){e=this.find(e),t=this.find(t);this.data[e][1]<this.data[t][1]?this.data[e][0]=t:this.data[e][1]>this.data[t][1]?this.data[t][0]=e:(this.data[t][0]=e,this.data[e][1]+=1)}find(e){return this.data[e][0]!==e&&(this.data[e][0]=this.find(this.data[e][0]),this.isComponent[e]=!1),this.data[e][0]}components(){return[...Array(this.isComponent.length).keys()].filter(e=>this.isComponent[e])}}function N(t,e){var s=t.length;const n=2*s-s+1;var r=[e];let a=[];for(;r.length;)a=a.concat(r),(r=r.filter(e=>e>=n).map(e=>e-n)).length&&(r=r.map(e=>[t[e].parent,t[e].child]).flat());return a}function O(e,t,s="eom",n=!1,r=0,a=0){if("eom"!==s)throw Error("Only eom method is supported now.");if(0!==r)throw Error("epsilon selection is not supported now.");if(n)throw Error("singleCluster is not supported now.");r=n?[...t.keys()].sort((e,t)=>t-e):[...t.keys()].sort((e,t)=>t-e).slice(0,t.size-1);const i=e.filter(e=>1<e.size),o=new Map;r.forEach(e=>o.set(e,!0));n=e.filter(e=>1===e.size).map(e=>e.child),n=Math.max(...n)+1;Math.max(...e.map(e=>e.lambda)),a<=0&&(a=n+1);const l=new Map;i.forEach(e=>l.set(e.child,e.size));for(const p of r){const g=i.filter(e=>e.parent===p).map(e=>e.child);var h=g.map(e=>t.get(e)||0).reduce((e,t)=>e+t,0);if(h>(t.get(p)||0)||(l.get(p)||0)>a)o.set(p,!1),t.set(p,h);else for(const m of function(e,t){var s=[t];let n=[];for(;s.length;)n=n.concat(s),s=e.filter(e=>-1!==s.indexOf(e.parent)).map(e=>e.child);return n}(i,p))m!==p&&o.set(m,!1)}var c=[...o.entries()].filter(e=>e[1]).map(e=>e[0]).sort();const d=new Map,f=new Map;for(var u=0;u<c.length;u++)d.set(c[u],u),f.set(u,c[u]);return{clusterNodes:c,clusterNodesMap:d,revClusterNodesMap:f,clusterTree:i}}function j(e){return e.sort((e,t)=>e.lambda-t.lambda)}function a(e,t=!1){var s=e;return{sortedMst:s=!t?j(e):s,singleLinkage:function(e){const t=new Array(e.length);for(var s=new l(e.length+1),n=0;n<e.length;++n){var r=e[n].parent,a=e[n].child,i=e[n].lambda,o=s.fastFind(r),r=s.fastFind(a),a=s.sizeOf(o)+s.sizeOf(r);t[n]=new z(o,r,i,a),s.union(o,r)}return t}(s)}}function k(e,t,s,n){var t=function(e,t,s){const n=new r.kdTree(e,s,[]);return e.map(e=>n.nearest(e,t)[0][1])}(e,t,n),e=function(e,t,s,n){var r=e.length;const a=[],i=[],o=new Array(r).fill(1/0);for(var l,h=0,c=1/0,d=1/0,f=1/0,u=1;u<r;u++){a[h]=1;for(var p,g=n[h],d=1/0,c=0,m=0;m<r;m++)a[m]||(l=o[m],f=s(e[h],e[m]),1!=t&&(f/=t),p=n[m],l<g||l<p||l<f?l<d&&(d=l,c=m):(g<p?f<p&&(f=p):f<g&&(f=g),f<l?(o[m]=f)<d&&(d=f,c=m):l<d&&(d=l,c=m)));i[u-1]=new z(h,c,d,0),h=c}return i}(e,s,n,t),{sortedMst:s,singleLinkage:n}=a(e);return{coreDistances:t,mst:e,sortedMst:s,singleLinkage:n}}function C(e,t){for(var s=0,n=0;n<e.length;n++)s+=Math.pow(e[n]-t[n],2);return Math.sqrt(s)}e.DebugInfo=class{constructor(){}},e.Hdbscan=class{constructor({input:e,minClusterSize:t=5,minSamples:s=5,alpha:n=1,metric:r=C,debug:a=!1}){this.input=e,this.minClusterSize=t,this.minSamples=s,this.alpha=n,this.metric=r,this.debug=a;let i;try{var o,{coreDistances:l,mst:h,sortedMst:c,singleLinkage:d}=k(this.input,this.minSamples,this.alpha,this.metric);this.debug&&(o=function(e){const r=[...new Array(e.length+1).keys()].map(e=>new A(e));var a=r[0];return j(e).forEach(e=>{const t=r[e.parent].getAncestor(),s=r[e.child].getAncestor(),n=new A(e.lambda);n.left=t,n.right=s,t.parent=s.parent=a=n}),a}(c),i={coreDistances:l,mst:h,sortedMst:c,mstBinaryTree:o,singleLinkage:d});var{bfsNodes:f,condensedTree:u}=function(e,t){var s=2*e.length,n=Math.floor(s/2)+1,r=n+1,a=new Array(1+s).fill(0);a[s]=n;var i=[],s=N(e,s);const o=new Array(s.length).fill(!1);for(const u of s)if(!(o[u]||u<n)){var l=e[u-n],h=l.parent,c=l.child,d=0<l.lambda?1/l.lambda:1/0,f=n<=h?e[h-n].size:1,l=n<=c?e[c-n].size:1;if(t<=f&&t<=l)a[h]=r,r+=1,i.push(new z(a[u],a[h],d,f)),a[c]=r,r+=1,i.push(new z(a[u],a[c],d,l));else if(f<t&&l<t){for(const p of N(e,h))p<n&&i.push(new z(a[u],p,d,1)),o[p]=!0;for(const g of N(e,c))g<n&&i.push(new z(a[u],g,d,1)),o[g]=!0}else if(f<t){a[c]=a[u];for(const m of N(e,h))m<n&&i.push(new z(a[u],m,d,1)),o[m]=!0}else{a[h]=a[u];for(const b of N(e,c))b<n&&i.push(new z(a[u],b,d,1)),o[b]=!0}}return{bfsNodes:s,condensedTree:i}}(d,this.minClusterSize);this.debug&&(i=Object.assign(Object.assign({},i),{bfsNodes:f,condensedTree:u}));var p=function(e){var t=Math.max(...e.map(e=>e.child)),s=Math.min(...e.map(e=>e.parent)),n=Math.max(...e.map(e=>e.parent))-s+1;t<s&&(t=s);const r=e.map(e=>[e.child,e.lambda]).sort((e,t)=>e[0]-t[0]),a=new Array(t+1).fill(NaN);for(var i=r.map(e=>e[0]),o=r.map(e=>e[1]),l=e.map(e=>e.parent),h=e.map(e=>e.size),c=e.map(e=>e.lambda),d=-1,f=0,u=0;u<r.length;u++)var p=i[u],g=o[u],f=p==d?Math.min(f,g):(d=(-1!=d&&(a[d]=f),p),g);-1!=d&&(a[d]=f),a[s]=0;const m=new Array(n).fill(0);for(var b=0;b<e.length;b++){var v=l[b],w=c[b],M=h[b];m[v-s]+=(w-a[v])*M}for(var y=new Map,b=0;b<m.length;b++)y.set(s+b,m[b]);return y}(u);this.debug&&(i=Object.assign(Object.assign({},i),{condensedTree:u}));var{clusterNodes:g,clusterNodesMap:m,revClusterNodesMap:b,clusterTree:v}=O(u,p);this.debug&&(i=Object.assign(Object.assign({},i),{clusterNodes:g,clusterNodesMap:m,revClusterNodesMap:b,clusterTree:v}));var w=function(e,t,s,n=!1,r=0,a=!1){if(0!==r)throw Error("epsilon selection is not supported now.");if(n)throw Error("singleCluster is not supported now.");if(a)throw Error("matchReferenceImplementation is not supported now.");var i=e.map(e=>e.parent),o=e.map(e=>e.child),l=Math.min(...i);const h=new Array(l);var c=Math.max(...i);const d=new x(c+1);for(var f=0;f<e.length;f++){var u=o[f],p=i[f];-1===t.indexOf(u)&&d.union(p,u)}for(var g,m,f=0;f<l;f++){const b=d.find(f);b<l?h[f]=-1:b===l?1===t.length&&n?(m=e.find(e=>e.child===f),0!==r?m&&m.lambda>=1/r?h[f]=s.get(b):h[f]=-1:(g=e.filter(e=>e.child===b).map(e=>e.lambda),m&&g&&m.lambda>=Math.max(...g)?h[f]=s.get(b):h[f]=-1)):h[f]=-1:a?(g=(m=e.find(e=>e.child===f))&&m.lambda,m=(m=e.find(e=>e.child===b))&&m.lambda,h[f]=g&&m&&m<g?s.get(b):-1):h[f]=s.get(b)}return h}(u,g,m);this.debug&&(i=Object.assign(Object.assign({},i),{labeledInputs:w}));var{clusters:M,noise:y}=function(e){const t=[],s=[];for(var n=0;n<e.length;n++){var r=e[n];-1===r?s.push(n):(t[r]||(t[r]=[]),t[r].push(n))}return{clusters:t,noise:s}}(w);this.debug&&(i=Object.assign(Object.assign({},i),{clusters:M,noise:y}),console.debug("debugInfo: ",i)),this.debugInfo=i,this.clusters=M,this.noise=y}catch(e){throw this.debug&&(console.debug("debugInfo: ",i),console.error("Error: Hdbscan: ",e)),e}}getDebugInfo(){return this.debugInfo}getClusters(){return this.clusters}getNoise(){return this.noise}},e.HierarchyNode=z,e.TreeNode=A,e.euclidean=C,Object.defineProperty(e,"__esModule",{value:!0})});
